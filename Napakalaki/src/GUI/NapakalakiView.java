/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import napakalaki.CombatResult;
import napakalaki.Napakalaki;
import napakalaki.NumericBadConsequence;

/**
 *
 * @author fran
 */
public class NapakalakiView extends javax.swing.JFrame {
    
    // Variables
    private Napakalaki napakalakiModel;

    /**
     * Creates new form NapakalakiView
     */
    public NapakalakiView() {
               
        initComponents();
                 
        // Por defecto no se ver√° el monstruo
        monsterView.setVisible(false);
        
        // Se desactivan los botones
        jButtonNapakalakiCombat.setEnabled(false);
        jButtonNapakalakiNextTurn.setEnabled(false);
        
        setIconButtonMeetMonster();
        setIconButtonCombat();
        setIconButtonNextTurn();
        
        jLabelNapakalakiResult.setText("");
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanelBase = new javax.swing.JPanel();
        playerView = new GUI.PlayerView();
        jPanelCards = new javax.swing.JPanel();
        jPanelData = new javax.swing.JPanel();
        jPanelResult = new javax.swing.JPanel();
        jLabelNapakalakiResult = new javax.swing.JLabel();
        jPanelButtons = new javax.swing.JPanel();
        jButtonNapakalakiMeetMonster = new javax.swing.JButton();
        jButtonNapakalakiCombat = new javax.swing.JButton();
        jButtonNapakalakiNextTurn = new javax.swing.JButton();
        monsterView = new GUI.MonsterView();
        jPanelBackground = new javax.swing.JPanel();
        jLabelBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelBase.setOpaque(false);
        jPanelBase.setLayout(new java.awt.BorderLayout());
        jPanelBase.add(playerView, java.awt.BorderLayout.CENTER);

        jPanelCards.setMinimumSize(new java.awt.Dimension(277, 250));
        jPanelCards.setOpaque(false);
        jPanelCards.setPreferredSize(new java.awt.Dimension(277, 250));
        jPanelCards.setLayout(new java.awt.BorderLayout(10, 10));

        jPanelData.setMinimumSize(new java.awt.Dimension(100, 66));
        jPanelData.setOpaque(false);
        jPanelData.setLayout(new java.awt.BorderLayout());

        jPanelResult.setMinimumSize(new java.awt.Dimension(80, 100));
        jPanelResult.setOpaque(false);
        jPanelResult.setPreferredSize(new java.awt.Dimension(80, 100));
        jPanelResult.setLayout(new java.awt.BorderLayout());

        jLabelNapakalakiResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNapakalakiResult.setText("Result");
        jPanelResult.add(jLabelNapakalakiResult, java.awt.BorderLayout.CENTER);

        jPanelData.add(jPanelResult, java.awt.BorderLayout.NORTH);

        jPanelButtons.setMinimumSize(new java.awt.Dimension(100, 39));
        jPanelButtons.setOpaque(false);

        jButtonNapakalakiMeetMonster.setText("Meet Monster");
        jButtonNapakalakiMeetMonster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNapakalakiMeetMonsterActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonNapakalakiMeetMonster);

        jButtonNapakalakiCombat.setText("Combat");
        jButtonNapakalakiCombat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNapakalakiCombatActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonNapakalakiCombat);

        jButtonNapakalakiNextTurn.setText("Next turn");
        jButtonNapakalakiNextTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNapakalakiNextTurnActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonNapakalakiNextTurn);

        jPanelData.add(jPanelButtons, java.awt.BorderLayout.CENTER);

        jPanelCards.add(jPanelData, java.awt.BorderLayout.NORTH);

        monsterView.setBorder(null);
        jPanelCards.add(monsterView, java.awt.BorderLayout.CENTER);

        jPanelBase.add(jPanelCards, java.awt.BorderLayout.EAST);

        jLabelBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanelBackgroundLayout = new javax.swing.GroupLayout(jPanelBackground);
        jPanelBackground.setLayout(jPanelBackgroundLayout);
        jPanelBackgroundLayout.setHorizontalGroup(
            jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 909, Short.MAX_VALUE)
        );
        jPanelBackgroundLayout.setVerticalGroup(
            jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 541, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 541, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1.setLayer(jPanelBase, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jPanelBackground, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNapakalakiMeetMonsterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNapakalakiMeetMonsterActionPerformed
                
        // Se activan/desactivan los botones
        jButtonNapakalakiMeetMonster.setEnabled(false);
        
        // Se muestra el monstruo
        monsterView.setVisible(true);
        
        // Se vuelve a cargar la pantalla
        repaint();
        
        // Se activan/desactivan los botones
        jButtonNapakalakiCombat.setEnabled(true);
        
    }//GEN-LAST:event_jButtonNapakalakiMeetMonsterActionPerformed

    private void jButtonNapakalakiCombatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNapakalakiCombatActionPerformed
                        
        // Se vuelve a cargar la pantalla
        repaint();
        
        // Se activan/desactivan los botones
        jButtonNapakalakiCombat.setEnabled(false);
        
        CombatResult result = napakalakiModel.developCombat();
                
        setIconResult(result.toString());
        
        //jLabelNapakalakiResult.setText(result.toString());
        
        if(result==CombatResult.WINGAME){
            
            playerView.disableButtons();
            
        } else{
            setNapakalaki(napakalakiModel);
        
            // Se activan/desactivan los botones
            jButtonNapakalakiNextTurn.setEnabled(true);
        }
                
    }//GEN-LAST:event_jButtonNapakalakiCombatActionPerformed

    private void jButtonNapakalakiNextTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNapakalakiNextTurnActionPerformed

        // Se comprueba que pueda pasar de turno
        if(playerView.getPlayer().getPendingBadConsequence().isEmpty()){
            
            // Se quita el icono del resultado del combate
            jLabelNapakalakiResult.setIcon(null);

            // Se quita el texto del pendingBadConsequence
            playerView.setTextPBC("", "");
            playerView.setTextInfoEmpty();

            // Se establece un pendingBadConsequence vac√≠o para que desaparezca de 
            // la ventana
            playerView.getPlayer().setPendingBadConsequence(new NumericBadConsequence("", 0, 0, 0));
            
            // Se eliminan todas las cartas del tablero del jugador
            playerView.jPanelPlayerHiddenTreasures.removeAll();
            playerView.jPanelPlayerVisibleTreasures.removeAll();

            // Se vuelve a cargar la pantalla
            repaint();

            // Se activan/desactivan los botones
            jButtonNapakalakiNextTurn.setEnabled(false);

            // Se vac√≠a la pantalla del monstruo
            monsterView.setVisible(false);

            napakalakiModel.nextTurn();

            setNapakalaki(napakalakiModel);

            // Se activan/desactivan los botones
            jButtonNapakalakiMeetMonster.setEnabled(true);
            
        }else{
            
            JOptionPane.showMessageDialog(this,"Debes cumplir la \"BadConsequence\"",
            "¬°Atenci√≥n!", JOptionPane.PLAIN_MESSAGE);
            
        }          
        
    }//GEN-LAST:event_jButtonNapakalakiNextTurnActionPerformed
        
    // Setter
    public void setNapakalaki(Napakalaki napakalaki){
        
        this.napakalakiModel = napakalaki;
        
        playerView.setPlayer(napakalaki.getCurrentPlayer());
        monsterView.setMonster(napakalaki.getCurrentMonster());
        
        playerView.setNapakalaki(napakalaki);
        
    }
    
    // Le establece un icono al boton DiscardAllTreasures
    private void setIconButtonMeetMonster(){
        
        jButtonNapakalakiMeetMonster.setText("");
        jButtonNapakalakiMeetMonster.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/meetmonster.png")));
        jButtonNapakalakiMeetMonster.setBorder(BorderFactory.createMatteBorder(0,0,0,0, new Color(0,0,0,0)));
        jButtonNapakalakiMeetMonster.setBackground(new Color(0,0,0,0));
        
    }
    
    // Le establece un icono al boton DiscardAllTreasures
    private void setIconButtonCombat(){
        
        jButtonNapakalakiCombat.setText("");
        jButtonNapakalakiCombat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/combat.png")));
        jButtonNapakalakiCombat.setBorder(BorderFactory.createMatteBorder(0,0,0,0, new Color(0,0,0,0)));
        jButtonNapakalakiCombat.setBackground(new Color(0,0,0,0));
        
    }
    
    // Le establece un icono al boton DiscardAllTreasures
    private void setIconButtonNextTurn(){
        
        jButtonNapakalakiNextTurn.setText("");
        jButtonNapakalakiNextTurn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nextturn.png")));
        jButtonNapakalakiNextTurn.setBorder(BorderFactory.createMatteBorder(0,0,0,0, new Color(0,0,0,0)));
        jButtonNapakalakiNextTurn.setBackground(new Color(0,0,0,0));
        
    }
    
    // Le establece un icono al boton DiscardAllTreasures
    private void setIconResult(String name){
        
        jLabelNapakalakiResult.setText("");
        jLabelNapakalakiResult.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/"+name+".png")));
        jLabelNapakalakiResult.setBorder(BorderFactory.createMatteBorder(0,0,0,0, new Color(0,0,0,0)));
        jLabelNapakalakiResult.setBackground(new Color(0,0,0,0));
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonNapakalakiCombat;
    private javax.swing.JButton jButtonNapakalakiMeetMonster;
    private javax.swing.JButton jButtonNapakalakiNextTurn;
    private javax.swing.JLabel jLabelBackground;
    private javax.swing.JLabel jLabelNapakalakiResult;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanelBackground;
    private javax.swing.JPanel jPanelBase;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelCards;
    private javax.swing.JPanel jPanelData;
    private javax.swing.JPanel jPanelResult;
    private GUI.MonsterView monsterView;
    private GUI.PlayerView playerView;
    // End of variables declaration//GEN-END:variables
}
